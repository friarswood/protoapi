{
  "openapi": "3.0.2",
  "info": {
    "version": "1.1.0",
    "title": "Prototype API BETA",
    "description": "Demonstration of how to create a simple REST API in python, using Flask, package it, and automate the deployment process",
    "termsOfService": "",
    "contact": {
      "name": "",
      "url": "https://github.com/virgesmith/protoapi",
      "email": ""
    },
    "license": {
      "name": "MIT Licence",
      "url": "https://github.com/virgesmith/protoapi/blob/master/LICENSE"
    }
  },
  "tags": [
    {
      "name": "Numeric",
      "description": "Does something numeric"
    },
    {
      "name": "Utility",
      "description": "Does something non-numeric"
    }
  ],
  "paths": {
    "/headers": {
      "get": {
        "description": "returns the client's http headers",
        "tags": [
          "Utility"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Failure",
            "schema": "#/components/schemas/error"
          }
        }
      }
    },
    "/sobol": {
      "get": {
        "description": "returns a Sobol sequence",
        "tags": [
          "Numeric"
        ],
        "parameters": [
          {
            "name": "dimension",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/sobol_dimension"
            }
          },
          {
            "name": "length",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/sobol_length"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": "#/components/schemas/sobol_sequence"
          },
          "400": {
            "description": "Failure",
            "schema": "#/components/schemas/error"
          }
        }
      }
    },
    "/integerise": {
      "post": {
        "description": "tries to find an integer array that preserves the marginal sums",
        "tags": [
          "Numeric"
        ],
        "requestBody": {
          "description": "an n-dimensional array of floating point values with integer marginal sums",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/float_array",
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Failed",
            "schema": "#/components/schemas/error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "sobol_dimension": {
        "type": "integer",
        "minimum": 1,
        "maximum": 1111
      },
      "sobol_length": {
        "type": "integer",
        "minimum": 1,
        "maximum": 1048576
      },
      "float_array": {
        "description": "array of floating-point numbers, NB '3.' won't parse, use '3' or '3.0'",
        "type": "array",
        "items": {
          "type": "number"
        }
      },
      "sobol_sequence": {
        "description": "a Sobol sequence: an array of n arrays of length dim, containing floating-point values in [0,1)",
        "type": "array",
        "items": {
          "type": "array",
          "items": {
            "type": "number",
            "minimum": 0.0,
            "exclusiveMaximum": 1.0
          }
        }
      },
      "error": {
        "description": "error information",
        "type": "object",
        "properties": {
          "code": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}